---
import Content from '~/components/widgets/Content.astro';
import Layout from '~/layouts/PageLayout.astro';

const title = "Samuel Almeida's Projects";

const metadata = {
  title: 'Projects',
};

const projects = [
  {
    title: 'Blog API',
    description:
      'A RESTful API for managing blog posts with role-based access. Admins can see all posts, users can view and manage only their own.',
    link: 'https://github.com/SamuelGaitkoski/express-blog-api',
    usedTech: ['Node.js', 'Express.js', 'Mongoose', 'MongoDB', 'Docker', 'JWT Authentication', 'Unit & Integration tests'],
  },
  {
    title: 'Notes CLI',
    description: 'A command-line tool to manage notes (add, list, remove) using only Node.js core modules.',
    link: 'https://github.com/SamuelGaitkoski/node-notes-cli',
    usedTech: ['Node.js'],
  },
  {
    title: 'Inventory API',
    description:
      'An Inventory API with role-based access, allowing admins to manage products and categories while users can browse them. Includes secure user authentication and a clear separation of privileges.',
    link: 'https://github.com/SamuelGaitkoski/inventory-api',
    usedTech: ['Node.js', 'Express.js', 'TypeScript', 'TypeORM', 'PostgreSQL', 'Docker', 'JWT Authentication'],
  },
  {
    title: 'Volunteering Platform',
    description:
      'Contributed to the development of a volunteering platform where users can register, log in, and sign up for events organized by entities. Entities can create, update, and delete events, while users can view available opportunities and apply until the event reaches the specified number of volunteers.',
    link: 'https://github.com/juliavdev/voluntariado',
    usedTech: ['Angular', 'Ionic', 'Node.js', 'Express.js', 'MySQL', 'Docker', 'JWT Authentication'],
  },
  {
    title: 'Stock Manager API',
    description:
      'A Stock Management WEB API to create, update, delete, and retrieve products, including individual product details.',
    link: 'https://github.com/SamuelGaitkoski/web-api-stock-manager',
    usedTech: ['C#', '.NET Core 3.1'],
  },
  {
    title: 'Products Manager',
    description:
      'A full-stack application where users can sign up, log in, and manage products with categories, prices, and CRUD operations.',
    beLink: 'https://github.com/SamuelGaitkoski/api-products',
    feLink: 'https://github.com/SamuelGaitkoski/front-angular-products',
    usedTech: ['Angular', '.NET 6.0', 'EF Core', 'SQL Server', 'JWT Authentication'],
  },
  {
    title: 'Fleet Management API',
    description:
      'A Fleet Management WEB API to create, update, delete, list, and retrieve vehicles and their associated drivers, enabling companies to efficiently manage their fleet.',
    link: 'https://github.com/SamuelGaitkoski/web-api-fleet-control',
    usedTech: ['C#', '.NET Core 3.1', 'EF Core', 'SQL Server'],
  },
  {
    title: 'Task List',
    description:
      'A simple and interactive task management application that allows users to add, edit, and delete tasks. It helps keep track of daily to-dos in a clean and user-friendly interface. Each task can be marked as completed, making it easy to manage priorities and stay organized.',
    link: 'https://github.com/SamuelGaitkoski/react-task-list',
    usedTech: ['React', 'TypeScript', 'Styled Components'],
  },
  {
    title: 'Rick and Morty Explorer UI',
    description:
      'A UI that consumes the Rick and Morty API. Features include light/dark theme switching, character search, and pages for API documentation and additional info about the API.',
    link: 'https://github.com/SamuelGaitkoski/react-rick-and-morty-api',
    usedTech: ['React', 'TypeScript', 'SCSS'],
  },
  {
    title: 'Twitter-Inspired UI',
    description: 'A Twitter-inspired UI where you can post tweets and view your own timeline.',
    link: 'https://github.com/SamuelGaitkoski/react-twitter-ui',
    usedTech: ['React', 'TypeScript'],
  },
  {
    title: 'OLX-Inspired E-commerce',
    description:
      "An OLX-inspired e-commerce platform where users can sign up, log in, manage their profile, browse ads and categories, and create or edit their own ads. The project consumes an API provided by the course's instructor.",
    link: 'https://github.com/SamuelGaitkoski/react-inspired-olx',
    usedTech: ['React', 'Styled Components', 'Redux', 'JWT Authentication'],
  },
  {
    title: 'Album Viewer',
    description: 'Browse albums and explore their photos using data from the JSON Placeholder API.',
    link: 'https://github.com/SamuelGaitkoski/react-album-jsonplaceholder-api',
    usedTech: ['React', 'TypeScript', 'Styled Components'],
  },
  {
    title: 'DevMemory',
    description:
      'DevMemory is a memory matching game where players must find pairs of identical images. The game tracks the time taken to complete the game and counts the number of moves made, adding an extra layer of challenge and competition.',
    link: 'https://github.com/SamuelGaitkoski/react-memory-game',
    usedTech: ['React', 'TypeScript', 'Styled Components'],
  },
  {
    title: 'IMC Calculator',
    description:
      'Calculate your BMI (Body Mass Index), a standard adopted by the World Health Organization to estimate the ideal weight for each person. The calculator determines your BMI based on the height and weight you enter and gives a visual indication of your result.',
    link: 'https://github.com/SamuelGaitkoski/react-imc-calculator',
    usedTech: ['React', 'TypeScript', 'CSS Modules'],
  },
];
---

<Layout metadata={metadata}>
  <main>
    <div class="w-full mx-auto">
      <div class="px-4 md:px-36">
        <section class="mx-auto mb-10 md:mb-9 mt-8 md:mt-16">
          <header>
            <h1 class="text-center text-4xl md:text-5xl font-extrabold md:font-bold">
              {title}
            </h1>
          </header>
        </section>

        {
          projects.map(({ title, description, link, beLink, feLink, usedTech }) => {
            const techContent = (
              <div class="text-sm md:text-xs font-semibold md:font-normal text-black dark:text-slate-400">
                {usedTech.join(' · ')}
              </div>
            );

            const linksArray = [
              beLink && (
                <a href={beLink} target="_blank" class="no-underline text-inherit">
                  Back-end Github
                </a>
              ),
              feLink && (
                <a href={feLink} target="_blank" class="no-underline text-inherit">
                  Front-end Github
                </a>
              ),
              link && !beLink && !feLink && (
                <a href={link} target="_blank" class="no-underline text-inherit">
                  Github
                </a>
              ),
              !link && !beLink && !feLink && <span>No links available</span>,
            ].filter(Boolean);

            const linksContent = (
              <div class="text-sm md:text-xs font-semibold md:font-normal text-black dark:text-slate-400">
                {linksArray.map((item, index) => (
                  <span>
                    {item}
                    {index < linksArray.length - 1 && ' · '}
                  </span>
                ))}
              </div>
            );

            return (
              <Content
                items={[
                  {
                    icon: 'mdi:package-variant-closed',
                    title: 'Description',
                    description: description,
                  },
                  {
                    icon: 'mdi:code-tags',
                    title: 'Technologies',
                    description: techContent,
                  },
                  {
                    icon: 'mdi:external-link',
                    title: 'Links',
                    description: linksContent,
                  },
                  {
                    icon: 'mdi:eye',
                    title: 'Image',
                    description: "View project's image",
                  },
                ]}
                classes={{
                  container: 'p-6 md:p-6 lg:p-6 my-6 bg-blue-50 dark:bg-slate-800 rounded-md',
                  gridContainer: 'gap-y-2 md:gap-y-2',
                  panel: 'bg-blue-50 dark:bg-inherit shadow-none hover:shadow-none items-start',
                  title: 'text-black',
                  description: 'ml-0 mt-1 text-black leading-relaxed text-sm md:text-xs font-semibold md:font-normal',
                  icon: 'h-7 md:h-6 w-7 md:w-6 text-black dark:text-white',
                }}
              >
                <Fragment slot="content">
                  <h3 class="text-2xl font-extrabold tracking-tight dark:text-white md:text-xl">{title}</h3>
                </Fragment>
              </Content>
            );
          })
        }
      </div>
    </div>
  </main>
</Layout>
